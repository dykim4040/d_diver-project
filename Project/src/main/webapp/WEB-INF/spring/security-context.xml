<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- 
		*시큐리티 필수객체
		로그인 수행시 로그인을 처리하기 위해
		사용자 입력값과 비교할 DB에 저장된 사용자 정보 객체를
		리턴하는 메소드를 가진 객체
		
		리턴받은 객체를 가지고 로그인시에 입력한 사용자 id, password와 비교해서 로그인 처리.
	 -->
	<bean id="customUserDetailsService" class="com.exam.security.CustomUserDetailsService"/>
	
	<!-- 
		*옵션 객체
		로그인이 성공하면 그 다음단계로 수행되는 객체.
		사용자 권한에 따른 로그인 후 첫 페이지 이동을 담당
	 -->
	<bean id="customLoginSuccessHandler" class="com.exam.security.CustomLoginSuccessHandler"/>
	
	<!-- 
		컨트롤러에서 시큐리티 애노테이션인 @PreAuthorize("hasAnyRole('ROLE_MEMBER')") 등으로
		해당 권한 없이 접근할때 수행될 객체
	 -->
	<bean id="customAccessDeniedHandler" class="com.exam.security.CustomAccessDeniedHandler"/>
	
	
	<security:http>
		<security:access-denied-handler ref="customAccessDeniedHandler"/>
		
		<!-- 로그인 GET 요청 URL을 login-page 속성값으로 설정 -->
		<security:form-login login-page="/member/login" authentication-success-handler-ref="customLoginSuccessHandler" />
		
		<!-- 로그아웃 POST 요청 URL을 logout-url 속성값으로 설정 -->
		<security:logout logout-url="/member/logout" invalidate-session="true" logout-success-url="/" delete-cookies="remember-me,JSESSION_ID"/>
		
<!-- 		<security:csrf disabled="true"/> -->
		<security:session-management invalid-session-url="/"><!-- 세션이 끊어졌을 때 '/' 로 이동 -->
			<security:concurrency-control max-sessions="1" expired-url="/"/><!-- 중복 로그인 방지 -->
		</security:session-management>
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	</security:http>
	
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>